language: python

python:
  - 3.4
  - 3.3
  - 2.7
  - 2.6

sudo: false

env:
  global:
    - SAUCE_USERNAME=digi604
    - secure: NWiSBCHFB6LbTMget2qLIdqZlx0zeu3j+Y7Lsqb8kuYXyT2IUBGFVedcGWuGv/9Mzypb80EQWtVTokA3/3QIbesqr29uG95pMPHiYWLdnTO6UHcLMcNXiSzhBGdRDZ40iHSVv2dDHs4GNwGOH5+UCA0z3j7SWmChuFbNXh+Vsqw=
    - PIP_ACCEL_S3_BUCKET=travisci.pip-cache.django-cms.org
    - PIP_ACCEL_S3_PREFIX=travis
    - secure: "ZGA13cE7KNq3toapVy8j5jfUHcaJkhbcFQTkMVn8XCmRnJOYUltFC7pagoR7u89jwdkgivknSTaMzwg6IQp3zUn4kMje1v3vKBqWvft6aK0Z3XTaUNWIrW7vAzZlrJsGnFajFxmgPpwZLXux79C9YE/MfMhtkvxmJDwPeIsUevc=" # AWS_ACCESS_KEY_ID
    - secure: "pAOA0Lj+KYpJU8NeWEsxIETgPwTt1uULapDhiJAOUFMu1qH3uygwxNjD19N5CTPscyGMMmDIk3igYvrhW9w8PM8OgsoKcjoslZl/amLodF3+sYu9JYEid3O5raMT/gkXHQp06kV22co+x+nxUideeUQm33bMtVGGJbe+m+AZHok=" # AWS_SECRET_ACCESS_KEY
  matrix:
    - DJANGO=1.6 DATABASE_URL='sqlite://localhost/:memory:' SELENIUM=0
    - DJANGO=1.6 DATABASE_URL='mysql://root@127.0.0.1/djangocms_test' SELENIUM=0
    - DJANGO=1.6 DATABASE_URL='postgres://postgres@127.0.0.1/djangocms_test' SELENIUM=0
    - DJANGO=1.6 DATABASE_URL='postgres://postgres@127.0.0.1/djangocms_test' SELENIUM=1 AUTH_USER_MODEL='emailuserapp.EmailUser'
    - DJANGO=1.7 DATABASE_URL='sqlite://localhost/:memory:' SELENIUM=0
    - DJANGO=1.7 DATABASE_URL='mysql://root@127.0.0.1/djangocms_test' SELENIUM=0
    - DJANGO=1.7 DATABASE_URL='postgres://postgres@127.0.0.1/djangocms_test' SELENIUM=0
    - DJANGO=1.7 DATABASE_URL='postgres://postgres@127.0.0.1/djangocms_test' SELENIUM=1 AUTH_USER_MODEL='emailuserapp.EmailUser'
    - DJANGO=1.6 DATABASE_URL='postgres://postgres@127.0.0.1/djangocms_test' SELENIUM=1 AUTH_USER_MODEL='customuserapp.User'

before_script:
  - sh -c "if [ '$DATABASE_URL' = 'postgres://postgres@127.0.0.1/djangocms_test' ];
    then psql -c 'DROP DATABASE IF EXISTS djangocms_test;' -U postgres; fi"
  - sh -c "if [ '$DATABASE_URL' = 'postgres://postgres@127.0.0.1/djangocms_test' ];
    then psql -c 'create database djangocms_test;' -U postgres; fi"
  - sh -c "if [ '$DATABASE_URL' = 'mysql://root@127.0.0.1/djangocms_test' ]; then mysql
    -e 'create database IF NOT EXISTS djangocms_test CHARACTER SET utf8 COLLATE utf8_general_ci;';
    fi"

install:
  - pip install 'pip-accel[s3]'
  - pip-accel install -q -r "test_requirements/django-$DJANGO.txt"
  - if [ $DATABASE_URL == 'postgres://postgres@127.0.0.1/djangocms_test' ]; then pip-accel
    install -q psycopg2 ; fi
  - if [ $DATABASE_URL == 'mysql://root@127.0.0.1/djangocms_test' ]; then pip-accel install
    -q mysql-python ; fi

script: coverage run --rcfile=.coverage.rc develop.py test --migrate

after_success: coveralls --config_file=.coverage.rc --coveralls_yaml=.coveralls.yml

notifications:
  email:
    recipients:
      - digi@treepy.com
    on_success: never
    on_failure: always
  irc:
    - irc.freenode.org#django-cms
    - irc.freenode.org#django-cms-sprint

matrix:
  exclude:

    - python: 2.6
      env: DJANGO=1.7 DATABASE_URL='sqlite://localhost/:memory:' SELENIUM=0
    - python: 2.6
      env: DJANGO=1.7 DATABASE_URL='mysql://root@127.0.0.1/djangocms_test' SELENIUM=0
    - python: 2.6
      env: DJANGO=1.7 DATABASE_URL='postgres://postgres@127.0.0.1/djangocms_test' SELENIUM=0
    - python: 2.6
      env: DJANGO=1.7 DATABASE_URL='postgres://postgres@127.0.0.1/djangocms_test' SELENIUM=1 AUTH_USER_MODEL='emailuserapp.EmailUser'

    - python: 3.3
      env: DJANGO=1.6 DATABASE_URL='mysql://root@127.0.0.1/djangocms_test' SELENIUM=0
    - python: 3.3
      env: DJANGO=1.7 DATABASE_URL='mysql://root@127.0.0.1/djangocms_test' SELENIUM=0

    - python: 3.4
      env: DJANGO=1.6 DATABASE_URL='mysql://root@127.0.0.1/djangocms_test' SELENIUM=0
    - python: 3.4
      env: DJANGO=1.7 DATABASE_URL='mysql://root@127.0.0.1/djangocms_test' SELENIUM=0

  allow_failures:
    - python: 2.7
      env: DJANGO=1.7 DATABASE_URL='mysql://root@127.0.0.1/djangocms_test' SELENIUM=0

  fast_finish: true
